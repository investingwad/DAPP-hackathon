{"version":3,"sources":["../../../../src/api/v1/moonbridge/bridge.routes.js"],"names":["router","express","Router","get","util","verifyreqHeader","req","res","bridgeController","create","post","signup","login","generate_claim","whitelist_user","verify_claimdata","get_verification_result","migrate_account","get_transaction_info"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,SAAX,EAAsBC,eAAKC,eAA3B,EAA4C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtDC,qBAAiBC,MAAjB,CAAwBH,GAAxB,EAA6BC,GAA7B;AACH,CAFD;;AAIAP,OAAOU,IAAP,CAAY,SAAZ,EAAuBN,eAAKC,eAA5B,EAA6C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvDC,qBAAiBG,MAAjB,CAAwBL,GAAxB,EAA6BC,GAA7B;AACH,CAFD;;AAIAP,OAAOU,IAAP,CAAY,eAAZ,EAA6BN,eAAKC,eAAlC,EAAmD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7DC,qBAAiBI,KAAjB,CAAuBN,GAAvB,EAA4BC,GAA5B;AACH,CAFD;;AAIAP,OAAOU,IAAP,CAAY,iBAAZ,EAA+BN,eAAKC,eAApC,EAAqD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/DC,qBAAiBK,cAAjB,CAAgCP,GAAhC,EAAqCC,GAArC;AACH,CAFD;;AAIAP,OAAOU,IAAP,CAAY,iBAAZ,EAA+BN,eAAKC,eAApC,EAAqD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/DC,qBAAiBM,cAAjB,CAAgCR,GAAhC,EAAqCC,GAArC;AACH,CAFD;;AAIAP,OAAOU,IAAP,CAAY,mBAAZ,EAAiCN,eAAKC,eAAtC,EAAuD,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjEC,qBAAiBO,gBAAjB,CAAkCT,GAAlC,EAAuCC,GAAvC;AACH,CAFD;AAGAP,OAAOG,GAAP,CAAW,qCAAX,EAAkDC,eAAKC,eAAvD,EAAwE,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClFC,qBAAiBQ,uBAAjB,CAAyCV,GAAzC,EAA8CC,GAA9C;AACH,CAFD;;AAIAP,OAAOU,IAAP,CAAY,kBAAZ,EAAgCN,eAAKC,eAArC,EAAsD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChEC,qBAAiBS,eAAjB,CAAiCX,GAAjC,EAAsCC,GAAtC;AACH,CAFD;;AAIAP,OAAOG,GAAP,CAAW,uCAAX,EAAoDC,eAAKC,eAAzD,EAA0E,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpFC,qBAAiBU,oBAAjB,CAAsCZ,GAAtC,EAA2CC,GAA3C;AACH,CAFD;;kBAKeP,M","file":"bridge.routes.js","sourcesContent":["import express from 'express'\nimport bridgeController from './bridge.controller'\nimport util from '../utils/util'\n\nconst router = express.Router()\n\nrouter.get('/create', util.verifyreqHeader, (req, res) => {\n    bridgeController.create(req, res)\n})\n\nrouter.post('/signup', util.verifyreqHeader, (req, res) => {\n    bridgeController.signup(req, res)\n})\n\nrouter.post('/user/session', util.verifyreqHeader, (req, res) => {\n    bridgeController.login(req, res)\n})\n\nrouter.post('/generate_claim', util.verifyreqHeader, (req, res) => {\n    bridgeController.generate_claim(req, res)\n})\n\nrouter.post('/whitelist_user', util.verifyreqHeader, (req, res) => {\n    bridgeController.whitelist_user(req, res)\n})\n\nrouter.post('/verify_claimdata', util.verifyreqHeader, (req, res) => {\n    bridgeController.verify_claimdata(req, res)\n})\nrouter.get('/get_verification_result/:result_id', util.verifyreqHeader, (req, res) => {\n    bridgeController.get_verification_result(req, res)\n})\n\nrouter.post('/migrate_account', util.verifyreqHeader, (req, res) => {\n    bridgeController.migrate_account(req, res)\n})\n\nrouter.get('/get_transaction_info/:transaction_id', util.verifyreqHeader, (req, res) => {\n    bridgeController.get_transaction_info(req, res)\n})\n\n\nexport default router;\n"]}