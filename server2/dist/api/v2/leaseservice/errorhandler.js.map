{"version":3,"sources":["../../../../src/api/v2/leaseservice/errorhandler.js"],"names":["smartcontracterr","err","msg","toString","split","errorObj","ermsg","length","el","find","a","includes","keyexist","cpulimit","billed_cpulimit","vaccnotfound","noamttransferred","amtleasedout","alreadyreg","ordernotfound","orderactive","orderstatnotfound","ordernotexp","message"],"mappings":";;;;;QACsBA,gB,GAAAA,gB;AAAf,eAAeA,gBAAf,CAAgCC,GAAhC,EAAqC;AAC1C;AACA,MAAIC,MAAMD,IAAIE,QAAJ,GAAeC,KAAf,CAAqB,GAArB,CAAV;AACA,MAAIF,GAAJ,EAAS;;AAEP,QAAIG,YAAW,EAAf;AACA,QAAIC,QAAQJ,IAAIA,IAAIK,MAAJ,GAAa,CAAjB,CAAZ;;AAEA,QAAIC,KAAKN,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,YAAX,KAA4BD,EAAEC,QAAF,CAAW,cAAX,CAAjC;AAAA,KAAT,CAAT;AACA,QAAIC,WAAWV,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,oCAAX,CAAL;AAAA,KAAT,CAAf;AACA,QAAIE,WAAWX,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,8BAAX,KAA8CD,EAAEC,QAAF,CAAW,gDAAX,CAAnD;AAAA,KAAT,CAAf;AACA,QAAIG,kBAAkBZ,IAAIO,IAAJ,CACpB;AAAA,aAAKC,EAAEC,QAAF,CAAW,iBAAX,KAAiCD,EAAEC,QAAF,CAAW,gEAAX,CAAtC;AAAA,KADoB,CAAtB;AAGA,QAAII,eAAeb,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,oBAAX,CAAL;AAAA,KAAT,CAAnB;AACA,QAAIK,mBAAmBd,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,4CAAX,KAA4DD,EAAEC,QAAF,CAAW,iDAAX,CAAjE;AAAA,KAAT,CAAvB;AACA,QAAIM,eAAef,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,qCAAX,CAAL;AAAA,KAAT,CAAnB;AACA,QAAIO,aAAahB,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,4BAAX,CAAL;AAAA,KAAT,CAAjB;AACA,QAAIQ,gBAAgBjB,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,oBAAX,CAAL;AAAA,KAAT,CAApB;AACA,QAAIS,cAAclB,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,8CAAX,CAAL;AAAA,KAAT,CAAlB;AACA,QAAIU,oBAAoBnB,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,2BAAX,CAAL;AAAA,KAAT,CAAxB;AACA,QAAIW,cAAcpB,IAAIO,IAAJ,CAAS;AAAA,aAAKC,EAAEC,QAAF,CAAW,uBAAX,CAAL;AAAA,KAAT,CAAlB;;AAGA,QAAIH,EAAJ,EAAQF,QAAQ,cAAR;AACR,QAAIM,QAAJ,EAAcN,QAAQ,qBAAR;AACd,QAAIO,QAAJ,EAAcP,QAAQ,kFAAR;AACd,QAAIQ,eAAJ,EAAqBR,QAAQ,uCAAR;;AAErB,QAAIS,YAAJ,EAAkBT,QAAQ,oBAAR;AAClB,QAAIU,gBAAJ,EAAsBV,QAAQ,4CAAR;AACtB,QAAIW,YAAJ,EAAkBX,QAAQ,qCAAR;AAClB,QAAIY,UAAJ,EAAgBZ,QAAQ,4BAAR;AAChB,QAAIa,aAAJ,EAAmBb,QAAQ,oBAAR;AACnB,QAAIc,WAAJ,EAAiBd,QAAQ,8CAAR;AACjB,QAAIe,iBAAJ,EAAuBf,QAAQ,2BAAR;AACvB,QAAIgB,WAAJ,EAAiBhB,QAAQ,uBAAR;;AAEjBD,cAASkB,OAAT,GAAmBjB,KAAnB;AACA,WAAOD,SAAP;AACD,GArCD,MAsCK;AACHA,aAASkB,OAAT,GAAmB,6BAAnB;AACA,WAAOlB,QAAP;AACD;AACF","file":"errorhandler.js","sourcesContent":["\nexport async function smartcontracterr(err) {\n  // console.log(\"err--\", err)\n  let msg = err.toString().split(':')\n  if (msg) {\n  \n    let errorObj = {}\n    let ermsg = msg[msg.length - 1]\n\n    var el = msg.find(a => a.includes('FetchError') || a.includes('ECONNREFUSED'))\n    var keyexist = msg.find(a => a.includes('uniqueness constraint was violated'))\n    var cpulimit = msg.find(a => a.includes('leeway on account CPU limits') || a.includes('transaction was unable to complete by deadline'))\n    var billed_cpulimit = msg.find(\n      a => a.includes('billed CPU time') || a.includes('greater than the maximum billable CPU time for the transaction'),\n    )\n    var vaccnotfound = msg.find(a => a.includes('vaccount not found'))\n    var noamttransferred = msg.find(a => a.includes('No amount was transferred by vaccount user') || a.includes('Initial amount not transferred by vaccount user'))\n    var amtleasedout = msg.find(a => a.includes('can not withdraw. amount leased out'))\n    var alreadyreg = msg.find(a => a.includes('Account already registered'))\n    var ordernotfound = msg.find(a => a.includes('Order id not found'))\n    var orderactive = msg.find(a => a.includes('can not withdraw. order is active and filled'))\n    var orderstatnotfound = msg.find(a => a.includes('Order status id not found'))\n    var ordernotexp = msg.find(a => a.includes('Order not expired yet'))\n\n    \n    if (el) ermsg = 'econnrefused'\n    if (keyexist) ermsg = ' key already exists'\n    if (cpulimit) ermsg = ' transaction exceeded the current network usage limit imposed on the transaction'\n    if (billed_cpulimit) ermsg = ' transaction exceeded billed cpu time'\n\n    if (vaccnotfound) ermsg = 'vaccount not found'\n    if (noamttransferred) ermsg = 'No amount was transferred by vaccount user'\n    if (amtleasedout) ermsg = 'can not withdraw. amount leased out'\n    if (alreadyreg) ermsg = 'Account already registered'\n    if (ordernotfound) ermsg = 'Order id not found'\n    if (orderactive) ermsg = 'can not withdraw. order is active and filled'\n    if (orderstatnotfound) ermsg = 'Order status id not found'\n    if (ordernotexp) ermsg = 'Order not expired yet'\n\n    errorObj.message = ermsg\n    return errorObj\n  }\n  else {\n    errorObj.message = 'Error in processing request'\n    return errorObj\n  }\n}\n\n"]}