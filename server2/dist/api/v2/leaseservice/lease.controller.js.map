{"version":3,"sources":["../../../../src/api/v2/leaseservice/lease.controller.js"],"names":["leaseController","dotenv","require","config","fetch","Order","Orderstat","Userkey","errorhandler","eosaction","PrivateKey","PublicKey","Signature","Aes","key_utils","createClient","client","dspEndpt","create","req","res","status","send","register_user","body","lease_amount","lease_period","vote_choice","account_name","message","network","httpEndpoint","service","process","env","contract","prv_key","randomKey","toWif","console","log","pubkey","fromString","toPublic","toString","response_reg","push_liquid_account_transaction","vaccount","response_registeraction","balance","userkeys","user","private","public","save","err","errmsg","smartcontracterr","create_order","authorizer","stake_to","rent_amount","rent_offer","duration","resource_type","orderid","getid","data","id","result","pushtrx","order","order_id","order_stat","apr","parseFloat","split","orderobj","lease_transfer","amount","from","exchange","to","quantity","memo","match_order","orders","aggregate","$match","$sort","vaccount_det","getvaccountdet","row","flag","duration_lease","every","element","index","max_lease_period","order_stat_id","getorderstatid","orderstat_id","changeorderstat","filled_at","Date","setDate","getDate","orderstat","lender","rent_fee","expires_at","toISOString","ordderstatres","withdraw","findOne","cancelorder","remove","exec","leaseunstake","get_orderdet","params","find","get_orderstatdet","get_accountblc","vaccount_blc","vaccount_history","getvaccounthistory","respobj","userblc_leaseout","userblc_totalstaked","total_leaseout_amount","userblc_totalreward","total_reward_amount","userblc_leaseout_history"],"mappings":"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","file":"lease.controller.js","sourcesContent":["let leaseController = {}\nconst dotenv = require('dotenv')\ndotenv.config()\nconst fetch = require('isomorphic-fetch')\n\nconst Order = require('./model/order.model')\nconst Orderstat = require('./model/orderstatus.model')\nconst Userkey = require('./model/userkeys.model')\nconst errorhandler = require('./errorhandler')\nconst eosaction = require('./eosaction/eosaction')\nlet {\n  PrivateKey,\n  PublicKey,\n  Signature,\n  Aes,\n  key_utils,\n  config\n} = require('eosjs-ecc')\nconst { createClient } = require('@liquidapps/dapp-client')\nvar client\nlet dspEndpt = 'https://kylin-dsp-2.liquidapps.io'\n// const getClient = async () => {\n//   if (client) return client\n//   client = await createClient({\n//     network: 'kylin',\n//     httpEndpoint: dspEndpt,\n//     fetch: fetch\n//   })\n//   return client\n// }\n\nleaseController.create = (req, res) => {\n  res.status(200).send('create user')\n}\n\nleaseController.register_user = async (req, res) => {\n  if (\n    !req.body.lease_amount ||\n    !req.body.lease_period ||\n    !req.body.vote_choice ||\n    !req.body.account_name\n  ) {\n    return res.status(400).send({ message: 'Missing required body parameter' })\n  }\n  try {\n    let client = await createClient({\n      network: 'kylin',\n      httpEndpoint: dspEndpt,\n      fetch: fetch\n    })\n    const service = await client.service('vaccounts', process.env.contract)\n    let prv_key = await PrivateKey.randomKey()\n    prv_key = prv_key.toWif()\n    console.log(prv_key)\n    let pubkey = PrivateKey.fromString(prv_key)\n      .toPublic()\n      .toString()\n    console.log(pubkey)\n    const response_reg = await service.push_liquid_account_transaction(\n      process.env.contract,\n      prv_key,\n      'regaccount',\n      {\n        vaccount: req.body.account_name // process.env.user1 // increment to new account if fails\n      }\n    )\n    console.log('response_reg', response_reg)\n\n    const response_registeraction = await service.push_liquid_account_transaction(\n      process.env.contract,\n      prv_key,\n      'registeracc',\n      {\n        vaccount: req.body.account_name, // process.env.user1,\n        balance: req.body.lease_amount,\n        lease_period: req.body.lease_period,\n        vote_choice: req.body.vote_choice\n      }\n    )\n    console.log('response_registeraction', response_registeraction)\n    let userkeys = new Userkey()\n    userkeys.user = req.body.account_name\n    userkeys.private = prv_key\n    userkeys.public = pubkey\n    await userkeys.save()\n    return res.status(200).send({ message: 'Successful' })\n    // lease_transfer(req.body.lease_amount);\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.create_order = async (req, res) => {\n  if (\n    !req.body.authorizer ||\n    !req.body.stake_to ||\n    !req.body.rent_amount ||\n    !req.body.rent_offer ||\n    !req.body.duration ||\n    !req.body.resource_type\n  ) {\n    return res.status(400).send({ message: 'Missing required body parameter' })\n  }\n\n  try {\n    let orderid = await eosaction.getid()\n    console.log('oreid received ==', orderid)\n    let data = {\n      id: orderid,\n      authorizer: req.body.authorizer,\n      stake_to: req.body.stake_to,\n      rent_amount: req.body.rent_amount,\n      rent_offer: req.body.rent_offer,\n      duration: req.body.duration,\n      resource_type: req.body.resource_type\n    }\n    const result = await eosaction.pushtrx(\n      'createorder',\n      data,\n      process.env.contract,\n      process.env.contract\n    )\n    console.log('result', result)\n\n    let order = new Order()\n    order.order_id = orderid\n    order.authorizer = req.body.authorizer\n    order.stake_to = req.body.stake_to\n    order.rent_amount = req.body.rent_amount\n    order.rent_offer = req.body.rent_offer\n    order.lease_period = req.body.duration\n    order.resource_type = req.body.resource_type\n    order.order_stat = 'queue'\n    order.apr =\n      parseFloat(req.body.rent_offer.split(' ')[0]) /\n      parseFloat(req.body.duration)\n\n    let orderobj = await order.save()\n    console.log('orderobj', orderobj)\n    return res.status(200).send({ message: orderobj })\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.lease_transfer = async (req, res) => {\n  if (!req.body.amount || !req.body.account_name) {\n    return res.status(400).send({ message: 'Missing required body parameter' })\n  }\n  try {\n    let data = {\n      from: process.env.exchange,\n      to: process.env.contract,\n      quantity: req.body.amount,\n      memo: '1:' + req.body.account_name\n    }\n    const result = await eosaction.pushtrx(\n      'transfer',\n      data,\n      'eosio.token',\n      process.env.exchange\n    )\n    console.log('result', result)\n    return res.status(200).send({ message: 'Successfully transferred' })\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.match_order = async (req, res) => {\n  if (!req.body.account_name) {\n    return res.status(400).send({ message: 'Missing required body parameter' })\n  }\n\n  try {\n    let orders = await Order.aggregate([\n      { $match: { order_stat: 'queue' } },\n      { $sort: { apr: -1 } }\n    ])\n\n    let vaccount_det = await eosaction.getvaccountdet(req.body.account_name)\n    if (!vaccount_det.row) {\n      return res.status(400).send({ message: 'No vaccount found' })\n    }\n    console.log('orders, vaccounts =', orders, vaccount_det)\n    let orderid = 0\n    let flag = 0\n    let duration_lease = 0\n    orders.every(function (element, index) {\n      console.log('element', element)\n\n      if (\n        element.lease_period <= vaccount_det.row.max_lease_period &&\n        parseFloat(element.rent_amount.split(' ')[0]) <=\n          parseFloat(vaccount_det.row.balance.split(' ')[0])\n      ) {\n        orderid = element.order_id\n        duration_lease = element.lease_period\n        flag = 1\n        return false\n      } else return true\n    })\n    console.log('flag ==', flag)\n    console.log('id selected received ==', orderid)\n    if (flag == 1) {\n      let order_stat_id = await eosaction.getorderstatid()\n      console.log('id received==', order_stat_id)\n      //\n      // console.log(\"orderobj\",orderobj)\n      // if (orderobj) {\n      let data = {\n        vaccount: req.body.account_name,\n        id: orderid,\n        orderstat_id: order_stat_id\n      }\n      const result = await eosaction.pushtrx(\n        'checkorder',\n        data,\n        process.env.contract,\n        process.env.contract\n      )\n      console.log('trx =', result)\n      let orderobj = await eosaction.changeorderstat(orderid)\n      let filled_at = new Date()\n      let duration = filled_at.setDate(filled_at.getDate() + duration_lease)\n\n      let orderstat = new Orderstat()\n      orderstat.orderstat_id = order_stat_id\n      orderstat.order_id = orderid\n      orderstat.lender = req.body.account_name\n      orderstat.authorizer = orderobj.authorizer\n      orderstat.stake_to = orderobj.stake_to\n      orderstat.rent_amount = orderobj.rent_amount\n      orderstat.rent_fee = orderobj.rent_offer\n      orderstat.expires_at = new Date(duration).toISOString().split('.')[0]\n      orderstat.filled_at = new Date().toISOString().split('.')[0]\n\n      let ordderstatres = await orderstat.save()\n      return res.status(200).send({message : ordderstatres})\n      // }\n    } else {\n      return res\n        .status(200)\n        .send({ message: 'At present no match found for this lease request' })\n    }\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.withdraw = async (req, res) => {\n  if (!req.body.account_name) {\n    return res.status(400).send({ message: 'Missing required body parameter' })\n  }\n  try {\n    let client = await createClient({\n      network: 'kylin',\n      httpEndpoint: dspEndpt,\n      fetch: fetch\n    })\n    const service = await client.service('vaccounts', process.env.contract)\n\n    let userkeys = await Userkey.findOne({ user: req.body.account_name })\n    console.log(userkeys)\n    if (userkeys != null) {\n      const response_registeraction = await service.push_liquid_account_transaction(\n        process.env.contract,\n        userkeys.private,\n        'withdraw',\n        {\n          vaccount: req.body.account_name // process.env.user1,\n        }\n      )\n      console.log('response_registeraction', response_registeraction)\n      return res\n        .status(200)\n        .send({ message: 'Successfully withdrawn lease-out request' })\n    } else {\n      return res\n        .status(400)\n        .send({ message: 'No private key found for this vaccount' })\n    }\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.cancelorder = async (req, res) => {\n  if (!req.body.order_id) {\n    return res.status(400).send({ message: 'Missing required body parameter' })\n  }\n  try {\n    let data = {\n      orderid: req.body.order_id\n    }\n    const result = await eosaction.pushtrx(\n      'cancelorder',\n      data,\n      process.env.contract,\n      process.env.contract\n    )\n    console.log('result', result)\n    let order = await Order.findOne({ order_id: req.body.order_id })\n      .remove()\n      .exec()\n\n    return res\n      .status(200)\n      .send({ message: 'Successfully withdrawn order request' })\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.leaseunstake = async (req, res) => {\n  if (!req.body.order_stat_id) {\n    return res.status(400).send({ message: 'Missing required body parameter' })\n  }\n  try {\n    let data = {\n      orderid: req.body.order_stat_id\n    }\n    const result = await eosaction.pushtrx(\n      'leaseunstake',\n      data,\n      process.env.contract,\n      process.env.contract\n    )\n    console.log('result', result)\n    let order = await Orderstat.findOne({ id: req.body.order_stat_id })\n    if (order) {\n      await Order.findOne({ order_id: order.order_id })\n        .remove()\n        .exec()\n      await order.remove()\n      return res.status(200).send({message : 'Successfully unstaked'})\n    }\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.get_orderdet = async (req, res) => {\n  if (!req.params.authorizer) {\n    return res.status(400).send({ message: 'Missing required parameter' })\n  }\n  try {\n    let order = await Order.find({ authorizer: req.params.authorizer })\n    if (order) {\n      return res.status(200).send({message : order})\n    } else {\n      return res.status(400).send({ message: 'no order details found' })\n    }\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.get_orderstatdet = async (req, res) => {\n  try {\n    let orderstat = await Orderstat.find({})\n    if (orderstat) {\n      return res.status(200).send({message : orderstat})\n    } else {\n      return res.status(400).send({ message: 'no order status details found' })\n    }\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nleaseController.get_accountblc = async (req, res) => {\n  if (!req.params.vaccount) {\n    return res.status(400).send({ message: 'Missing required parameter' })\n  }\n  try {\n    let vaccount_blc = await eosaction.getvaccountdet(req.params.vaccount)\n    let vaccount_history = await eosaction.getvaccounthistory(\n      req.params.vaccount\n    )\n    let respobj = {}\n    if (vaccount_blc.row) {\n      respobj.userblc_leaseout = vaccount_blc.row.balance\n      respobj.userblc_totalstaked = vaccount_blc.row.total_leaseout_amount\n      respobj.userblc_totalreward = vaccount_blc.row.total_reward_amount\n    } else if (vaccount_history.row) {\n      respobj.userblc_leaseout_history = vaccount_history.row.balance\n    } else respobj.userblc_leaseout = '0.0000 EOS'\n    return res.status(200).send({message : respobj})\n  } catch (err) {\n    let errmsg = await errorhandler.smartcontracterr(err)\n    return res.status(400).send(errmsg)\n  }\n}\n\nexport default leaseController\n/// //////////////\n"]}