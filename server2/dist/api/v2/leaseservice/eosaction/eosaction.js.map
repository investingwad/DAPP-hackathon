{"version":3,"sources":["../../../../../src/api/v2/leaseservice/eosaction/eosaction.js"],"names":["pushtrx","getid","getorderstatid","changeorderstat","getaccountblc","updateexchange","dotenv","require","config","express","bodyParser","cors","Api","JsonRpc","RpcError","JsSignatureProvider","fetch","TextEncoder","TextDecoder","Order","Orderstat","Ordercounter","Orderstatcounter","Userbalance","signatureProvider","dspEndpt","rpc","api","textDecoder","textEncoder","method","data","account","resobj","result","transact","actions","name","authorization","actor","permission","blocksBehind","expireSeconds","console","log","res","err","findOne","sort","created_at","orderid","order_id","save","id","orderstatid","orderstat_id","order_stat","vaccount","dataString1","process","env","contract","vaccount_table","options","url","get_table_row","body","rp","JSON","parse","account_name","amount","operation","user","blc","parseFloat","balance","split","toFixed","toString","lease_out","get_currency_balance","code","exchange","exchngeblc"],"mappings":";;;;;QA+BsBA,O,GAAAA,O;QAiCAC,K,GAAAA,K;QAcAC,c,GAAAA,c;QAcAC,e,GAAAA,e;QAYAC,a,GAAAA,a;QAuBAC,c,GAAAA,c;AA/HtB,IAAMC,SAASC,QAAQ,QAAR,CAAf;AACAD,OAAOE,MAAP;AACA,IAAMC,UAAUF,QAAQ,SAAR,CAAhB;AACA,IAAMG,aAAaH,QAAQ,aAAR,CAAnB;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;;eACmCA,QAAQ,OAAR,C;IAA3BK,G,YAAAA,G;IAAKC,O,YAAAA,O;IAASC,Q,YAAAA,Q;;gBACUP,QAAQ,wBAAR,C;IAAxBQ,mB,aAAAA,mB;;AACR,IAAMC,QAAQT,QAAQ,kBAAR,CAAd;;gBACqCA,QAAQ,eAAR,C;IAA7BU,W,aAAAA,W;IAAaC,W,aAAAA,W;;AAErB,IAAMC,QAAQZ,QAAQ,sBAAR,CAAd;AACA,IAAMa,YAAYb,QAAQ,4BAAR,CAAlB;AACA,IAAMc,eAAed,QAAQ,+BAAR,CAArB;AACA,IAAMe,mBAAmBf,QAAQ,iCAAR,CAAzB;AACA,IAAMgB,cAAchB,QAAQ,gCAAR,CAApB;;AAEA,IAAMiB,oBAAoB,IAAIT,mBAAJ,CAAwB;AAChD;AACA;AACA;AACA;AAJgD,CAAxB,CAA1B;AAMA,IAAIU,WAAW,mCAAf;AACA,IAAIC,MAAM,IAAIb,OAAJ,CAAYY,QAAZ,EAAsB,EAAET,YAAF,EAAtB,CAAV;AACA,IAAIW,MAAM,IAAIf,GAAJ,CAAQ;AAChBc,UADgB;AAEhBF,sCAFgB;AAGhBI,eAAa,IAAIV,WAAJ,EAHG;AAIhBW,eAAa,IAAIZ,WAAJ;AAJG,CAAR,CAAV;;AAOO,eAAejB,OAAf,CAAwB8B,MAAxB,EAAgCC,IAAhC,EAAsCC,OAAtC,EAA+C;AACpD,MAAIC,SAAS,EAAb;AACA,MAAI;AACF,QAAMC,SAAS,MAAMP,IAAIQ,QAAJ,CACnB;AACEC,eAAS,CACP;AACEJ,iBAASA,OADX;AAEEK,cAAMP,MAFR;AAGEQ,uBAAe,CACb;AACEC,iBAAOP,OADT;AAEEQ,sBAAY;AAFd,SADa,CAHjB;AASET,cAAMA;AATR,OADO;AADX,KADmB,EAgBnB;AACEU,oBAAc,CADhB;AAEEC,qBAAe;AAFjB,KAhBmB,CAArB;AAqBAC,YAAQC,GAAR,CAAY,QAAZ,EAAsBV,MAAtB;AACAD,WAAOY,GAAP,GAAaX,MAAb;AACA,WAAOD,MAAP;AACD,GAzBD,CAyBE,OAAOa,GAAP,EAAY;AACZH,YAAQC,GAAR,CAAY,YAAZ,EAA0BE,GAA1B;AACA,WAAOA,GAAP;AACD;AACF;;AAEM,eAAe7C,KAAf,GAAwB;AAC7B,MAAI4C,MAAM,MAAMxB,aAAa0B,OAAb,CAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAAEC,MAAM,EAAEC,YAAY,CAAC,CAAf,EAAR,EAA7B,CAAhB;AACA,MAAI,CAACJ,GAAL,EAAU;AACR,QAAIK,UAAU,IAAI7B,YAAJ,EAAd;AACA6B,YAAQC,QAAR,GAAmB,CAAnB;AACA,UAAMD,QAAQE,IAAR,EAAN;AACA,WAAO,CAAP;AACD,GALD,MAKO;AACLP,QAAIQ,EAAJ,GAASA,IAAT;AACA,UAAMR,IAAIO,IAAJ,EAAN;AACA,WAAOP,IAAIQ,EAAX;AACD;AACF;;AAEM,eAAenD,cAAf,GAAiC;AACtC,MAAI2C,MAAM,MAAMvB,iBAAiByB,OAAjB,CAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAEC,MAAM,EAAEC,YAAY,CAAC,CAAf,EAAR,EAAjC,CAAhB;AACA,MAAI,CAACJ,GAAL,EAAU;AACR,QAAIS,cAAc,IAAIhC,gBAAJ,EAAlB;AACAgC,gBAAYC,YAAZ,GAA2B,CAA3B;AACA,UAAMD,YAAYF,IAAZ,EAAN;AACA,WAAO,CAAP;AACD,GALD,MAKO;AACLP,QAAIQ,EAAJ,GAASA,IAAT;AACA,UAAMR,IAAIO,IAAJ,EAAN;AACA,WAAOP,IAAIQ,EAAX;AACD;AACF;;AAEM,eAAelD,eAAf,CAAgC+C,OAAhC,EAAyC;AAC9C,MAAIL,MAAM,MAAM1B,MAAM4B,OAAN,CAAc,EAAEM,IAAIH,OAAN,EAAd,CAAhB;;AAEA,MAAI,CAACL,GAAL,EAAU;AACR,WAAO,CAAP;AACD,GAFD,MAEO;AACLA,QAAIW,UAAJ,GAAiB,QAAjB;AACA,UAAMX,IAAIO,IAAJ,EAAN;AACA,WAAOP,GAAP;AACD;AACF;;AAEM,eAAezC,aAAf,CAA8BqD,QAA9B,EAAwC;AAC7C,MAAIC,cACF,kBACAC,QAAQC,GAAR,CAAYC,QADZ,GAEA,aAFA,GAGAF,QAAQC,GAAR,CAAYC,QAHZ,GAIA,aAJA,GAKAF,QAAQC,GAAR,CAAYE,cALZ,GAMA,WANA,GAOAL,QAPA,GAQA,IATF;AAUA,MAAIM,UAAU;AACZC,SAAKL,QAAQC,GAAR,CAAYK,aADL;AAEZnC,YAAQ,MAFI;AAGZoC,UAAMR;AAHM,GAAd;AAKAzB,SAAOY,GAAP,GAAa,EAAb;AACAA,QAAM,MAAMsB,GAAGJ,OAAH,CAAZ;AACA9B,SAAOY,GAAP,GAAauB,KAAKC,KAAL,CAAWxB,GAAX,CAAb;AACAF,UAAQC,GAAR,CAAYC,GAAZ;AACA,SAAOZ,MAAP;AACD;;AAEM,eAAe5B,cAAf,CAA+BiE,YAA/B,EAA6CC,MAA7C,EAAqDC,SAArD,EAAgE;AACrE,MAAI;AACF,QAAI3B,OAAM,MAAMtB,YAAYwB,OAAZ,CAAoB,EAAE0B,MAAMH,YAAR,EAApB,CAAhB;AACA,QAAIE,aAAa,UAAjB,EAA6B;AAC3B,UAAI3B,IAAJ,EAAS;AACP,YAAI6B,MACFC,WAAW9B,KAAI+B,OAAJ,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAX,IACAF,WAAWJ,OAAOM,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAX,CAFF;AAGAhC,aAAI+B,OAAJ,GAAcF,IAAII,OAAJ,CAAY,CAAZ,EAAeC,QAAf,KAA4B,MAA1C;AACAlC,aAAImC,SAAJ,GACE,CACEL,WAAW9B,KAAImC,SAAJ,CAAcH,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAX,IACAF,WAAWJ,OAAOM,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAX,CAFF,EAIGC,OAJH,CAIW,CAJX,EAKGC,QALH,KAKgB,MANlB;AAOA,cAAMlC,KAAIO,IAAJ,EAAN;AACD,OAbD,MAaO;AACL,YAAIwB,UAAU,MAAMjD,IAAID,GAAJ,CAAQuD,oBAAR,CAA6B;AAC/CC,gBAAM,aADyC;AAE/ClD,mBAAS2B,QAAQC,GAAR,CAAYuB;AAF0B,SAA7B,CAApB;AAIA,YAAIC,aAAa,IAAI7D,WAAJ,EAAjB;AACA6D,mBAAWR,OAAX,GAAqBA,OAArB;AACAQ,mBAAWJ,SAAX,GAAuBT,MAAvB;AACAa,mBAAWhC,IAAX;AACD;AACF,KAxBD,MAwBO,IAAIoB,aAAa,UAAjB,EAA6B;AAClC,UAAI3B,IAAJ,EAAS;AACP,YAAI+B,WAAU,MAAMjD,IAAID,GAAJ,CAAQuD,oBAAR,CAA6B;AAC/CC,gBAAM,aADyC;AAE/ClD,mBAAS2B,QAAQC,GAAR,CAAYuB;AAF0B,SAA7B,CAApB;AAIA,YAAIT,OACFC,WAAW9B,KAAI+B,OAAJ,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAX,IACAF,WAAW9B,KAAImC,SAAJ,CAAcH,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAX,CAFF;AAGAhC,aAAI+B,OAAJ,GAAcA,QAAd;AACA/B,aAAImC,SAAJ,GAAgB,YAAhB;AACA,cAAMnC,KAAIO,IAAJ,EAAN;AACD;AACF;AACF,GAxCD,CAwCE,OAAON,GAAP,EAAY;AACZH,YAAQC,GAAR,CAAYE,GAAZ;AACD;AACF","file":"eosaction.js","sourcesContent":["const dotenv = require('dotenv')\ndotenv.config()\nconst express = require('express')\nconst bodyParser = require('body-parser')\nconst cors = require('cors')\nconst { Api, JsonRpc, RpcError } = require('eosjs')\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig')\nconst fetch = require('isomorphic-fetch')\nconst { TextEncoder, TextDecoder } = require('text-encoding')\n\nconst Order = require('../model/order.model')\nconst Orderstat = require('../model/orderstatus.model')\nconst Ordercounter = require('../model/orderidcounter.model')\nconst Orderstatcounter = require('../model/orderstatcounter.model')\nconst Userbalance = require('../model/userexchangeblc.model')\n\nconst signatureProvider = new JsSignatureProvider([\n  // process.env.contract_key,\n  // process.env.proxy1_key,\n  // process.env.proxy2_key,\n  // process.env.exchange_key\n])\nlet dspEndpt = 'https://kylin-dsp-2.liquidapps.io'\nlet rpc = new JsonRpc(dspEndpt, { fetch })\nlet api = new Api({\n  rpc,\n  signatureProvider,\n  textDecoder: new TextDecoder(),\n  textEncoder: new TextEncoder()\n})\n\nexport async function pushtrx (method, data, account) {\n  let resobj = {}\n  try {\n    const result = await api.transact(\n      {\n        actions: [\n          {\n            account: account,\n            name: method,\n            authorization: [\n              {\n                actor: account,\n                permission: 'active'\n              }\n            ],\n            data: data\n          }\n        ]\n      },\n      {\n        blocksBehind: 3,\n        expireSeconds: 30\n      }\n    )\n    console.log('result', result)\n    resobj.res = result\n    return resobj\n  } catch (err) {\n    console.log('s.m. err--', err)\n    return err\n  }\n}\n\nexport async function getid () {\n  let res = await Ordercounter.findOne({}, {}, { sort: { created_at: -1 } })\n  if (!res) {\n    let orderid = new Ordercounter()\n    orderid.order_id = 1\n    await orderid.save()\n    return 1\n  } else {\n    res.id = id++\n    await res.save()\n    return res.id\n  }\n}\n\nexport async function getorderstatid () {\n  let res = await Orderstatcounter.findOne({}, {}, { sort: { created_at: -1 } })\n  if (!res) {\n    let orderstatid = new Orderstatcounter()\n    orderstatid.orderstat_id = 1\n    await orderstatid.save()\n    return 1\n  } else {\n    res.id = id++\n    await res.save()\n    return res.id\n  }\n}\n\nexport async function changeorderstat (orderid) {\n  let res = await Order.findOne({ id: orderid })\n\n  if (!res) {\n    return 0\n  } else {\n    res.order_stat = 'active'\n    await res.save()\n    return res\n  }\n}\n\nexport async function getaccountblc (vaccount) {\n  var dataString1 =\n    '{\"contract\":\"' +\n    process.env.contract +\n    '\",\"scope\":\"' +\n    process.env.contract +\n    '\",\"table\":\"' +\n    process.env.vaccount_table +\n    '\",\"key\":\"' +\n    vaccount +\n    '\"}'\n  var options = {\n    url: process.env.get_table_row,\n    method: 'POST',\n    body: dataString1\n  }\n  resobj.res = {}\n  res = await rp(options)\n  resobj.res = JSON.parse(res)\n  console.log(res)\n  return resobj\n}\n\nexport async function updateexchange (account_name, amount, operation) {\n  try {\n    let res = await Userbalance.findOne({ user: account_name })\n    if (operation == 'transfer') {\n      if (res) {\n        let blc =\n          parseFloat(res.balance.split(' ')[0]) -\n          parseFloat(amount.split(' ')[0])\n        res.balance = blc.toFixed(4).toString() + ' EOS'\n        res.lease_out =\n          (\n            parseFloat(res.lease_out.split(' ')[0]) +\n            parseFloat(amount.split(' ')[0])\n          )\n            .toFixed(4)\n            .toString() + ' EOS'\n        await res.save()\n      } else {\n        let balance = await api.rpc.get_currency_balance({\n          code: 'eosio.token',\n          account: process.env.exchange\n        })\n        let exchngeblc = new Userbalance()\n        exchngeblc.balance = balance\n        exchngeblc.lease_out = amount\n        exchngeblc.save()\n      }\n    } else if (operation == 'withdraw') {\n      if (res) {\n        let balance = await api.rpc.get_currency_balance({\n          code: 'eosio.token',\n          account: process.env.exchange\n        })\n        let blc =\n          parseFloat(res.balance.split(' ')[0]) -\n          parseFloat(res.lease_out.split(' ')[0])\n        res.balance = balance\n        res.lease_out = '0.0000 EOS'\n        await res.save()\n      }\n    }\n  } catch (err) {\n    console.log(err)\n  }\n}\n"]}